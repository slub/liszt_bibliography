######################
#### DEPENDENCIES ####
######################
#<INCLUDE_TYPOSCRIPT: source="FILE:EXT:liszt_common/Configuration/TypoScript/setup.typoscript">

/*lib.contentElement {
    #layoutRootPaths {
        #200 = EXT:liszt_bibliography:Resources/Private/Layouts
    #}
    #partialRootPaths {
        #200 = EXT:liszt_bibliography:Resources/Private/Partial
    #}
    templateRootPaths {
        200 = EXT:liszt_bibliography/Resources/Private/Templates
    }
}*/

/*tt_content {
    lisztbibliography_listing =< lib.contentElement
    lisztbibliography_listing {
        templateName = BibliographyListing
    }
}*/

# page.includeJSFooter.BibliographyController = EXT:liszt_bibliography/Resources/Public/JavaScript/Src/BibliographyController.js

plugin.tx_lisztcommon_searchlisting {
  settings {
    entityTypes {
      1 {
        # the key which leads to the entity type name translation in the locallang file
        labelKey = bibliography
        # the current extension name, needed for translation of label key
        extensionName = liszt_bibliography
        # the name of the entity index
        indexName = zotero
        # the filter fields
        filters {
          0 {
            field = itemType
            type = terms
          }
          1 {
            field = creators
            type = nested
            script (
              String firstName = doc['creators.firstName.keyword'].size() > 0 ? doc['creators.firstName.keyword'].value : '';
              String lastName = doc['creators.lastName.keyword'].size() > 0 ? doc['creators.lastName.keyword'].value : '';
              String type = doc['creators.creatorType.keyword'].size() > 0 ? doc['creators.creatorType.keyword'].value : '';
              if (type == 'translator') {
                return null;
              }
              if (firstName == '' && lastName == '') {
                  return null;
              }
              return (firstName + ' ' + lastName).trim();
            )
          }
          2 {
            field = date
            type = terms
          }
          3 {
            field = language
            type = terms
          }
          4 {
            field = publicationTitle
            type = terms
          }
        }
      }
    }
  }
}
